import numpy as np

"""
В этом задании вам необходимо реализовать алгоритм МНК 
(метод наименьших квадратов) в виде функции с использованием библиотеки numpy:

def mnk(x_,y_):
    …
    return a,b
Входные данные:

●     x_: временной ряд x длиной 30 точек, сгенерированный с помощью функции linspace;


●     y_: временной ряд y длиной 30 точек, сгенерированный с помощью функции linspace с коэффициентами a и b.

Написанная функция должна возвращать коэффициенты a и b функции линейной аппроксимации (y = ax + b).
"""

def mnk(x_, y_):
    """
    Функция реализует метод наименьших квадратов для нахождения
    коэффициентов линейной аппроксимации y = ax + b.

    Args:
        x_: Массив значений x.
        y_: Массив значений y.

    Returns:
        a: Коэффициент наклона прямой.
        b: Свободный член уравнения прямой.
    """

    # Проверка на одинаковую длину массивов
    if len(x_) != len(y_):
        raise ValueError("Массивы x_ и y_ должны иметь одинаковую длину")

    # Вычисление необходимых сумм
    n = len(x_)
    sum_x = np.sum(x_)
    sum_y = np.sum(y_)
    sum_x2 = np.sum(x_ * x_)
    sum_xy = np.sum(x_ * y_)

    # Вычисление коэффициентов a и b
    a = (n * sum_xy - sum_x * sum_y) / (n * sum_x2 - sum_x**2)
    b = (sum_y * sum_x2 - sum_x * sum_xy) / (n * sum_x2 - sum_x**2)

    return a, b

# Генерация тестовых данных
x = np.linspace(0, 10, 30)
a = 2
b = 1
y = a * x + b

# Вызов функции mnk
a_found, b_found = mnk(x, y)

# Вывод результатов
print("Найденные коэффициенты:")
print("a =", a_found)
print("b =", b_found)
